#!python3
# -*- coding: utf-8 -*-

# Create WikiImages.md containing all links to images from all *.MD QMS Wiki pages with prefix Adv or DocFAQ

# - Open this page in Firefox
# - Click each link to see if it works/loads - if not check if image file is missing

import os
import fnmatch
import re

# define folders and file mask to be considered
filedir = r".."                 # script runs from Tools subfolder - goto parent folder
filemasks = (r"DocFaq*.md",     # file masks used for scan
             r"Adv*.md",
             r"DocQuickStart*.md",
            ) 

r1 = re.compile("(!\[(.*?)\]\((.*?)\))") # pattern for image link

# find each file
def gen_find(filepat,top):
  # filepat: list of pattern of files to find
  # top: folder where search for files is started   
  
  for path, dirlist, filelist in os.walk(top, topdown=True): # enable editing of dirlist
    dirlist.clear()                                          # don't go into subfolders
    for mask in filemasks:                                   # loop over file masks
      names = fnmatch.filter(filelist,mask)                  # find files matching the mask
      for name in names:                                     # output each filename
        yield os.path.join(path,name)

# open each file      
def gen_open(filenames):
  for name in filenames:
    yield open(name, encoding="utf-8")      

# find each line in each open file   
def gen_cat(sources):
  for s in sources:                         # loop over files
    for item in s:                          # loop over lines of file
      if "](" in item:                      # use only lines with a link 
        yield (item, s.name)                # yields each line of each file with a link together with its filename
   
# input: sequence of (MD_link_line, filename) as generated by gen_cat      
# output: printable MD line with link
def gen_output(lines):      
  for lne in lines:
    lnk = lne[0]                            # line with a link
    rr = r1.findall(lnk)                    # find all image links
    for rrr in rr:
      f = lne[1].split(os.sep)[-1][:-3]            # get filename without folder 
      yield "%s | [%s](%s)\n" % (rrr[0][1:], f, f) # line for MD output   

#-------------------------------------------------------------------------
      
# find all necessary *.md files
mdfiles = gen_find(filemasks, filedir)      

# open all of them
openmdfiles = gen_open(mdfiles)
  
# join all of them (Linux cat!)
catopenmdfiles = gen_cat(openmdfiles)

# get necessary output lines = lines with image links and prepare output for printing
lnklines = gen_output(catopenmdfiles)

# open output file 
outpf = open("../AxWikiImages.md", "w", encoding="utf-8")

# write page header
outpf.write("# Images in QMS Wiki\n\n_Currently only for parts_\n\n* Advanced QMapShack usage\n* FAQ\n\n___Do not edit - automatically created!___\n\n")
outpf.write("Image caption | Used in\n---------|---------\n")

# sort lines by image caption text
lnklines = list(lnklines)
lnklines.sort()

usedimages = []                            # list of images mentioned in links

r2 = re.compile("/([^/]+?/[^/]+?) ")       # mask for getting image name

for l in lnklines:
  outpf.write(l)  
  usedimages.append(r2.search(l).group(1)) # add image name to list
  
outpf.close()    

usedimages.sort()  

print("\nUsed files:")     
for i in usedimages:
  print(i)  
  
filedirs = (r"../images/DocFaq",
            r"../images/DocAdv" )           # folders for images used in this page
filemasks = (r"*.*",
            )   
                        
# find all image files for filemasks (DocAdv, DocFaq)
print("\nNot used:")

for filedir in filedirs:
  imgfiles = gen_find(filemasks, filedir)      
       
  for i in imgfiles:
    ii = i.replace("\\", "/")               # replace "\" separator with "/" separator   
    ii = ii.split("/",2)[-1]                # get image name without path
    if ii not in usedimages:
      print(ii)  
  
